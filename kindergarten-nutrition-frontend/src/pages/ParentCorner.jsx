import React, { useState } from 'react';
import Header from '../components/common/Header.jsx';
import { useAuth } from '../context/AuthContext.jsx';
import parentFeedbackService from '../services/parentFeedbackService.js';
import '../styles/ParentCorner.css';

const ParentCorner = () => {
  const { user } = useAuth();
  const [formData, setFormData] = useState({
    tieu_de: '',
    noi_dung: '',
    danh_gia_sao: 5
  });
  const [loading, setLoading] = useState(false);
  const [message, setMessage] = useState({ type: '', text: '' });

  // X·ª≠ l√Ω thay ƒë·ªïi input
  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  // G·ª≠i √Ω ki·∫øn ph·ª• huynh
  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!formData.noi_dung.trim()) {
      setMessage({ type: 'error', text: 'Vui l√≤ng nh·∫≠p n·ªôi dung √Ω ki·∫øn' });
      return;
    }

    try {
      setLoading(true);
      setMessage({ type: '', text: '' });

      const feedbackData = {
        tieu_de: formData.tieu_de || '√ù ki·∫øn ph·ª• huynh',
        noi_dung: formData.noi_dung,
        danh_gia_sao: parseInt(formData.danh_gia_sao) || 5
      };

      console.log('üì© Sending feedback:', feedbackData);
      const response = await parentFeedbackService.createFeedback(feedbackData);

      if (response.success) {
        setMessage({ type: 'success', text: 'G·ª≠i √Ω ki·∫øn th√†nh c√¥ng! C·∫£m ∆°n b·∫°n ƒë√£ ph·∫£n h·ªìi.' });
        setFormData({ tieu_de: '', noi_dung: '', danh_gia_sao: 5 });
      } else {
        setMessage({ type: 'error', text: response.message || 'G·ª≠i √Ω ki·∫øn th·∫•t b·∫°i.' });
      }
    } catch (error) {
      console.error('L·ªói g·ª≠i √Ω ki·∫øn:', error);
      setMessage({ type: 'error', text: 'Kh√¥ng th·ªÉ g·ª≠i √Ω ki·∫øn. Vui l√≤ng th·ª≠ l·∫°i sau.' });
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="parent-corner-page">
      <Header />
      <div className="parent-corner-container">
        <div className="parent-corner-content">
          <h1>G√≥c Ph·ª• Huynh</h1>

          {/* --- KHU V·ª∞C G·ª¨I √ù KI·∫æN --- */}
          <section className="feedback-section">
            <h2>G·ª≠i √Ω ki·∫øn ƒë·∫øn nh√† tr∆∞·ªùng</h2>
            <p>Ch√∫ng t√¥i lu√¥n l·∫Øng nghe m·ªçi g√≥p √Ω v√† ph·∫£n h·ªìi t·ª´ qu√Ω ph·ª• huynh ‚ù§Ô∏è</p>

            {message.text && (
              <div
                className={`feedback-message ${message.type}`}
                style={{
                  backgroundColor: message.type === 'success' ? '#e8f5e9' : '#ffebee',
                  color: message.type === 'success' ? '#388e3c' : '#d32f2f',
                  padding: '10px 14px',
                  borderRadius: '8px',
                  marginBottom: '15px',
                  fontWeight: '500'
                }}
              >
                {message.text}
              </div>
            )}

            <form className="feedback-form" onSubmit={handleSubmit}>
              <div className="form-group">
                <label>Ti√™u ƒë·ªÅ</label>
                <input
                  type="text"
                  name="tieu_de"
                  placeholder="Nh·∫≠p ti√™u ƒë·ªÅ (tu·ª≥ ch·ªçn)"
                  value={formData.tieu_de}
                  onChange={handleChange}
                  disabled={loading}
                />
              </div>

              <div className="form-group">
                <label>N·ªôi dung √Ω ki·∫øn *</label>
                <textarea
                  name="noi_dung"
                  placeholder="Nh·∫≠p √Ω ki·∫øn c·ªßa b·∫°n..."
                  value={formData.noi_dung}
                  onChange={handleChange}
                  rows={5}
                  disabled={loading}
                ></textarea>
              </div>

              <div className="form-group rating-group">
                <label>ƒê√°nh gi√° (sao)</label>
                <select
                  name="danh_gia_sao"
                  value={formData.danh_gia_sao}
                  onChange={handleChange}
                  disabled={loading}
                >
                  {[5, 4, 3, 2, 1].map(star => (
                    <option key={star} value={star}>
                      {`${'‚≠ê'.repeat(star)} (${star})`}
                    </option>
                  ))}
                </select>
              </div>

              <button
                type="submit"
                className="submit-btn"
                disabled={loading}
                style={{
                  opacity: loading ? 0.7 : 1,
                  cursor: loading ? 'not-allowed' : 'pointer'
                }}
              >
                {loading ? 'ƒêang g·ª≠i...' : 'G·ª≠i √Ω ki·∫øn'}
              </button>
            </form>
          </section>

          {/* --- C√ÅC M·ª§C KH√ÅC --- */}
          <section className="contact-info">
            <h3>Th√¥ng tin li√™n h·ªá</h3>
            <div className="contact-grid">
              <div className="contact-item">
                <h4>Hotline</h4>
                <p>(08) 38.000.000</p>
              </div>
              <div className="contact-item">
                <h4>Email</h4>
                <p>info@kindergarten-abc.edu.vn</p>
              </div>
              <div className="contact-item">
                <h4>Gi·ªù l√†m vi·ªác</h4>
                <p>Th·ª© 2 - Th·ª© 6: 7:00 - 17:00</p>
              </div>
              <div className="contact-item">
                <h4>ƒê·ªãa ch·ªâ</h4>
                <p>123 ƒê∆∞·ªùng ABC, Qu·∫≠n XYZ, TP.HCM</p>
              </div>
            </div>
          </section>
        </div>
      </div>
    </div>
  );
};

export default ParentCorner;
