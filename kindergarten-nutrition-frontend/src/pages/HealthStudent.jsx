import React, { useState } from "react";
import "./../styles/HealthManager.css";
import "../styles/background.css";
import BackButton from "../components/BackButton";

const HealthStudent = () => {
  // State th√¥ng tin b√©
  const [childInfo] = useState({
    name: "Nguy·ªÖn VƒÉn A",
    dob: "2020-05-10",
    className: "M·∫´u gi√°o l·ªõn",
    parentName: "Nguy·ªÖn VƒÉn B",
    phone: "0901234567",
  });

  // State d·ªã ·ª©ng
  const [allergies, setAllergies] = useState(["Tr·ª©ng", "ƒê·∫≠u ph·ªông"]);
  const [newAllergy, setNewAllergy] = useState("");

  // State m·ª©c ƒë·ªô ƒÉn
  const [mealPercent] = useState(80);

  // State BMI
  const [weight] = useState(16); // kg
  const [height] = useState(100); // cm
  const [bmi] = useState(16.0);
  const [bmiCategory] = useState("B√¨nh th∆∞·ªùng");
  const [gender] = useState("male");
  const [ageMonths] = useState(52);

  // G·ª£i √Ω nhanh
  const quickSuggestions = ["M√® (v·ª´ng)", "Tr·ª©ng", "H·∫£i s·∫£n", "L√∫a m√¨", "ƒê·∫≠u n√†nh", "ƒê·∫≠u ph·ªông"];

  // H√†m th√™m d·ªã ·ª©ng
  const handleAddAllergy = () => {
    if (newAllergy.trim() !== "" && !allergies.includes(newAllergy)) {
      setAllergies([...allergies, newAllergy]);
      setNewAllergy("");
    }
  };

  const handleKeyDown = (e) => {
    if (e.key === "Enter") {
      e.preventDefault();
      handleAddAllergy();
    }
  };

  // H√†m render Th√¥ng tin b√©
  const renderChildInfo = (info) => (
    <div className="info-box">
      <p><b>Th√¥ng tin b√©</b></p>
      <div className="form-row">
        <label>H·ªç v√† t√™n:</label>
        <input type="text" value={info.name} disabled />
      </div>
      <div className="form-row">
        <label>Ng√†y sinh:</label>
        <input type="date" value={info.dob} disabled />
      </div>
      <div className="form-row">
        <label>L·ªõp:</label>
        <input type="text" value={info.className} disabled />
      </div>
      <div className="form-row">
        <label>T√™n ph·ª• huynh:</label>
        <input type="text" value={info.parentName} disabled />
      </div>
      <div className="form-row">
        <label>S·ªë ƒëi·ªán tho·∫°i:</label>
        <input type="tel" value={info.phone} disabled />
      </div>
    </div>
  );

  // H√†m render BMI
  const renderBMI = () => (
    <div className="card">
      <h3>T√≠nh BMI c·ªßa tr·∫ª</h3>
      <div className="form-row">
        <label htmlFor="weight">C√¢n n·∫∑ng (kg):</label>
        <input id="weight" type="number" value={weight} disabled />
      </div>
      <div className="form-row">
        <label htmlFor="height">Chi·ªÅu cao (cm):</label>
        <input id="height" type="number" value={height} disabled />
      </div>
      <div className="form-row">
        <label htmlFor="gender">Gi·ªõi t√≠nh:</label>
        <select id="gender" value={gender} disabled>
          <option value="male">Nam</option>
          <option value="female">N·ªØ</option>
        </select>
      </div>
      <div className="form-row">
        <label htmlFor="ageMonths">Tu·ªïi (th√°ng):</label>
        <input id="ageMonths" type="number" value={ageMonths} disabled />
      </div>
      {bmi && (
        <p>
          üëâ BMI c·ªßa b√© l√† <b>{bmi}</b> ({bmiCategory})
        </p>
      )}
    </div>
  );

  // H√†m render Ghi ch√∫ b·ªØa ƒÉn
  const renderMealNote = (note) => (
    <div className="form-row">
      <h3>Ghi ch√∫ b·ªØa ƒÉn:</h3>
      <textarea id="mealNote" value={note} disabled rows={3} />
    </div>
  );

  // H√†m render ƒÇn u·ªëng
  const renderMeal = () => (
    <div className="card">
      <h3>B√© c√≥ ƒÉn t·∫°i tr∆∞·ªùng h√¥m nay?</h3>
      <input type="date" value="2025-09-20" disabled />
      <div className="checkbox-field">
        <input type="checkbox" checked disabled />
        <label>ƒê√£ ƒÉn t·∫°i tr∆∞·ªùng</label>
      </div>

      <h3>M·ª©c ƒë·ªô ƒÉn (∆∞·ªõc l∆∞·ª£ng % kh·∫©u ph·∫ßn)</h3>
      <input type="range" min="0" max="100" step="5" value={mealPercent} disabled />
      <p>üëâ B√© ƒë√£ ƒÉn kho·∫£ng <b>{mealPercent}%</b></p>

      {renderMealNote("ƒÇn h·∫øt c∆°m, u·ªëng 150ml s·ªØa")}
    </div>
  );

  // H√†m render D·ªã ·ª©ng
  const renderAllergies = () => (
    <div className="card">
      <h3>B√© b·ªã d·ªã ·ª©ng v·ªõi:</h3>
      <div className="allergy-input">
        <input
          type="text"
          placeholder="Nh·∫≠p v√† nh·∫•n Enter"
          value={newAllergy}
          onChange={(e) => setNewAllergy(e.target.value)}
          onKeyDown={handleKeyDown}
        />
        <button onClick={handleAddAllergy}>+ Th√™m</button>
      </div>

      {allergies.length > 0 ? (
        <div className="tags" >
          <h3 style={{ marginTop: "15px" }}>Danh s√°ch d·ªã ·ª©ng</h3>
      
          {allergies.map((item, index) => (
            <span key={index}>{item}</span>
          ))}
        </div>
      ) : (
        <p>Kh√¥ng c√≥ d·ªã ·ª©ng</p>
      )}

      <h3 style={{ marginTop: "15px" }}>G·ª£i √Ω nhanh</h3>
      <div className="tags">
        {quickSuggestions.map((item, index) => (
          <span key={index}>{item}</span>
        ))}
      </div>
    </div>
  );

  return (
    <div className="health-container home">
      <div className="header">
        <BackButton />
        <div className="title-box">QU·∫¢N L√ù S·ª®C KH·ªéE</div>
        {renderChildInfo(childInfo)}
      </div>

      <div className="form-sections">
        {renderBMI()}
        {renderMeal()}
        {renderAllergies()}
      </div>
    </div>
  );
};

export default HealthStudent;
